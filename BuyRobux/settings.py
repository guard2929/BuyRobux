# C:/Users/Admin/PycharmProjects/BuyRobux/BuyRobux/settings.py
"""
Django settings for BuyRobux project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-y8$+l4q_efqa8l(6m249&4x2*3*)k7e0#*nm#ymi8!+l9w!3sf'

DEBUG = False

ALLOWED_HOSTS = ['someonev21.pythonanywhere.com']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'buyers',
    'widget_tweaks',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BuyRobux.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BuyRobux.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'roblox-cache'
    }
}

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000']
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
AUTH_USER_MODEL = 'core.CustomUser'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
ROBLOX_API_KEY = os.getenv('ROBLOX_API_KEY',
                           'YA880vhGPkiUmThQhhrchAcbCnrSItPPqf4XY+SJb1N842RPZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluTnBaeTB5TURJeExUQTNMVEV6VkRFNE9qVXhPalE1V2lJc0luUjVjQ0k2SWtwWFZDSjkuZXlKaVlYTmxRWEJwUzJWNUlqb2lXVUU0T0RCMmFFZFFhMmxWYlZSb1VXaG9jbU5vUVdOaVEyNXlVMGwwVUZCeFpqUllXU3RUU21JeFRqZzBNbEpRSWl3aWIzZHVaWEpKWkNJNklqSTRPVGt3T1RFME9UQWlMQ0poZFdRaU9pSlNiMkpzYjNoSmJuUmxjbTVoYkNJc0ltbHpjeUk2SWtOc2IzVmtRWFYwYUdWdWRHbGpZWFJwYjI1VFpYSjJhV05sSWl3aVpYaHdJam94TnpVek9EYzVNamd3TENKcFlYUWlPakUzTlRNNE56VTJPREFzSW01aVppSTZNVGMxTXpnM05UWTRNSDAuazFvRnQzeVFvZ2UwNzFlUE95d3ZQR2NSRnNHS3prRTdKa1hWRFltVWhhdmZIUk93S1dBaTVsSTc5NE1QMG81bnowT0VDazRpdVVZdzl6SUk4eWNYUUExTElidU9RVkV3ODJ3Znd4VnZYaXc2S0JuQVRMUnhsNjRPX2RRVjRWVGkxdTRvdzFEdVNQR1g5QjJGMGdxZk1qWUZVNHROR1hhR3JnN1g2anVIOEN5TjA3REUwMTRoS2Iyem1LTTJORmFuclZDQ0ZVOFdLM2FxaVhneTFCRFo0UC0teGZzTndFb0hteVdXa2JMRTE0VGdDbElOejdReVNTWFhxWEowR1ZQMzhlTDBVNUZqRHJtUzJqZXhBaXhkYUNDalFxYVhraUxsV2V2Z09leU5TLXJ5SlEzWWlxcmdMTmg2YTJ5THV4RjljLVA2SjJEU2hzc0QwNlcyanBSNERR')  # Замени на тестовый ключ или выброси ошибку, если ключ отсутствует
if not ROBLOX_API_KEY:
    raise ValueError("ROBLOX_API_KEY не установлен в переменных окружения")
from decouple import config

ROBLOX_API_KEY = config('ROBLOX_API_KEY')
# settings.py
ROBLOX_API_KEY = 'YA880vhGPkiUmThQhhrchAcbCnrSItPPqf4XY+SJb1N842RPZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluTnBaeTB5TURJeExUQTNMVEV6VkRFNE9qVXhPalE1V2lJc0luUjVjQ0k2SWtwWFZDSjkuZXlKaVlYTmxRWEJwUzJWNUlqb2lXVUU0T0RCMmFFZFFhMmxWYlZSb1VXaG9jbU5vUVdOaVEyNXlVMGwwVUZCeFpqUllXU3RUU21JeFRqZzBNbEpRSWl3aWIzZHVaWEpKWkNJNklqSTRPVGt3T1RFME9UQWlMQ0poZFdRaU9pSlNiMkpzYjNoSmJuUmxjbTVoYkNJc0ltbHpjeUk2SWtOc2IzVmtRWFYwYUdWdWRHbGpZWFJwYjI1VFpYSjJhV05sSWl3aVpYaHdJam94TnpVek9EYzVNamd3TENKcFlYUWlPakUzTlRNNE56VTJPREFzSW01aVppSTZNVGMxTXpnM05UWTRNSDAuazFvRnQzeVFvZ2UwNzFlUE95d3ZQR2NSRnNHS3prRTdKa1hWRFltVWhhdmZIUk93S1dBaTVsSTc5NE1QMG81bnowT0VDazRpdVVZdzl6SUk4eWNYUUExTElidU9RVkV3ODJ3Znd4VnZYaXc2S0JuQVRMUnhsNjRPX2RRVjRWVGkxdTRvdzFEdVNQR1g5QjJGMGdxZk1qWUZVNHROR1hhR3JnN1g2anVIOEN5TjA3REUwMTRoS2Iyem1LTTJORmFuclZDQ0ZVOFdLM2FxaVhneTFCRFo0UC0teGZzTndFb0hteVdXa2JMRTE0VGdCbElOejdReVNTWFhxWEowR1ZQMzhlTDBVNUZqRHJtUzJqZXhBaXhkYUNDalFxYVhraUxsV2V2Z09leU5TLXJ5SlEzWWlxcmdMTmg2YTJ5THV4RjljLVA2SjJEU2hzc0QwNlcranBSNERR'
# settings.py
# settings.py
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
INFURA_URL = 'https://mainnet.infura.io/v3/0b4ba9a53b0c4d73a95044e094fb9efd'  # Или другая сеть, например, Sepolia
WALLET_PRIVATE_KEY = '59aa85ffb8df3e7e07cd1aa3d0aad548b759265ffa0c8866705192429d8d9b40'  # Приватный ключ для управления адресами (храните безопасно!)
PAYMENT_CURRENCY = 'ETH'  # Валюта для оплаты (можно изменить на USDT, BNB и т.д.)
MIN_CONFIRMATIONS = 3  # Минимальное количество подтверждений для транзакции
RUB_EXCHANGE_RATE = 291101.00  # Курс ETH к RUB (замените на актуальный, можно брать через API)
NOWPAYMENTS_API_KEY = 'TFGW1HC-8M34SFS-JMTH4XV-0H6ABVG'
NOWPAYMENTS_IPN_SECRET = 'fkWs4sgwRIFMjeCrm8tNDp6By8M5EgUn'